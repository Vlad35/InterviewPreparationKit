package Algorithms.BFS;

public class MyQueue {
    private int[] array;
    private int size = 10;
    private int head;
    private int tail;
    private int count;//Сколько элементов в очереди

    public MyQueue() {
        array = new int[size];
        head = 0;
        tail = -1;
        count = 0;
    }

    public void insert(int v) {
        if(tail == size - 1) {
            tail = -1;
        }
        array[++tail] = v;
        count ++;
    }

    public int remove() {
        if(head == size) {
            head = 0;
        }
        count --;
        return array[head++];
    }

    public boolean isEmpty() {
        return count == 0;
    }

    public void setArray(int[] array) {
        this.array = array;
    }

    public void setSize(int size) {
        this.size = size;
    }

    public void setHead(int head) {
        this.head = head;
    }

    public void setTail(int tail) {
        this.tail = tail;
    }

    public void setCount(int count) {
        this.count = count;
    }

    public int[] getArray() {
        return array;
    }

    public int getSize() {
        return size;
    }

    public int getHead() {
        return head;
    }

    public int getTail() {
        return tail;
    }

    public int getCount() {
        return count;
    }
}
