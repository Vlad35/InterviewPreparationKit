package MultiThreading.Atomics;

import static MultiThreading.Atomics.Main.atomicInteger;

public class MyAtomicThread extends Thread{
    @Override
    public void run() {
        atomicInteger.incrementAndGet();
    }
    //This operation is not atomic:
    //As it is known,when we do i++,it seems the same for compilator as below:
    //    int q = i + 1;
    //    i = q;
    //But our threads aren't synchronized,so somewhere we can have situation below:
    //    int q = i + 1;
    //    int q = i + 1;
    //    i = q;
    //    i = q;
    //In this situation we lost 1,so that is why in our code we got number,less than 10000 instead of 10000.
    //Atomicity is helping us to avoid this situation!
}
